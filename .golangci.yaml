go: '1.21.4'

run:
  deadline: 5m

linters:
  enable-all: true
  disable:
    # deprecated
    - varnamelen
    - testpackage
    - golint
    - interfacer
    - structcheck
    - maligned
    - scopelint
    - nosnakecase
    - deadcode
    - varcheck
    - ifshort
    - exhaustivestruct
    # meaningfully disabled
    - gochecknoglobals
    - exhaustruct
    - nosprintfhostport # not supporting ipv6 addresses in configuration
    - depguard
    - tparallel # duplicates paralleltest

linters-settings:
  tagliatelle:
    case:
      use-field-name: true
      rules:
        json: snake
        yaml: camel
  revive:
    rules:
      - name: deep-exit
      - name: defer
      - name: dot-imports
      - name: early-return
      - name: exported
        arguments: [ "checkPrivateReceivers" ]
      - name: unreachable-code
      - name: unused-receiver
      # default rules:
      - name: var-declaration
      - name: dot-imports
      - name: blank-imports
      - name: var-naming
      - name: indent-error-flow
      - name: range
      - name: errorf
      - name: receiver-naming
      - name: increment-decrement
      - name: error-return
      - name: time-naming
      - name: context-keys-type
      - name: context-as-argument
  forbidigo:
    forbid:
      - p: 'c\.Bot'
        msg: "can't be mocked, use instance of schema.TelegramAPI instead"
      - p: 'c\.Reply'
        msg: "can't be mocked, use instance of schema.TelegramAPI instead"
      - p: 'context\.Background'
        msg: "dont' spawn new context, use context from telebot context instead"
issues:
  exclude-use-default: false
  exclude-rules:
    - linters:
        - "revive"
        - "stylecheck"
      text: "package comment"
    - path: .+_test\.go
      linters:
        - bodyclose  # we use close it in a helper method
        - noctx
        - gosec
        - forbidigo
    - linters:
        - godox
      text: "TODO"
    - path: main.go
      linters:
        - forbidigo
  max-issues-per-linter: 0
  max-same-issues: 0
